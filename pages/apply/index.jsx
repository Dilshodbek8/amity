import Head from "next/head";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import classes from "./Apply.module.scss";
import BreadCrumb from "../../components/BreadCrumb";
import SimpleHeading from "../../components/SimpleHeading/SimpleHeading";
import { useTranslation } from "next-i18next";
import { useForm, Controller, FormProvider } from "react-hook-form";
import Accordion from "@mui/material/Accordion";
import AccordionSummary from "@mui/material/AccordionSummary";
import AccordionDetails from "@mui/material/AccordionDetails";
import Typography from "@mui/material/Typography";
// import InputSelect from "../../components/InputSelect";
import Image from "next/image";
import InputText from "../../components/InputText";
import InputMaska from "../../components/InputMask/InputMask";
import line from "../../public/media/icons/line.svg";
import InfoCard from "../../components/InfoCard/InfoCard";
import foto1 from "../../public/media/images/info.png";
import foto2 from "../../public/media/images/info2.png";
import foto3 from "../../public/media/images/info3.png";

const Apply = () => {
  const { t } = useTranslation();

  const methods = useForm({
    mode: "onChange",
    shouldFocusError: true,
  });

  const { watch, control, formState } = methods;
  console.log(watch());

  return (
    <>
      <Head>
        <title>Apply</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="container">
        <div className={classes.bread}>
          <BreadCrumb />
        </div>

        <div className={classes.heading}>
          <SimpleHeading hedingText={t("Apply Today")} />
          <p>{t("Application Form")}</p>
        </div>

        <div className={classes.accordions}>
          <Accordion sx={{ width: "100% !important", boxShadow: "0" }}>
            <AccordionSummary
              sx={{ width: "20rem" }}
              aria-controls="panel1a-content"
              id="panel1a-header"
              expandIcon={<Image src={line} alt={line} />}
            >
              <Typography
                sx={{ fontSize: "1.5rem", textTransform: "uppercase" }}
              >
                {t("Enquirer Details")}
              </Typography>
            </AccordionSummary>
            <AccordionDetails>
              <Typography />
              <div className={classes.forma}>
                <FormProvider {...methods}>
                  {/* <Label
                    required
                    isError={errors?.something}
                    errorMessage={errors?.something?.message}
                    labelPosition="top"
                    label={t("Something")}
                  >
                    <Controller
                      className={classes.item}
                      name="something"
                      control={control}
                      render={({ field: { onChange, value } }) => (
                        <InputSelect
                          value={value}
                          onChange={(e) => onChange(e.target.value)}
                          placeholder={t("Choose Something")}
                          options={[
                            { title: "qwerty", val: "qwerty" },
                            { title: "asdf", val: "asdf" },
                            { title: "zxcv", val: "zxcv" },
                            { title: "uiop", val: "uiop" },
                          ]}
                        />
                      )}
                    />
                  </Label> */}

                  <div className={classes.item}>
                    <label htmlFor="forname">{t("Forename*")}</label>
                    <Controller
                      name="name"
                      control={control}
                      render={({ field }) => (
                        <InputText
                          name="namee"
                          label={"Forename"}
                          id={"forname"}
                          radius
                          fullWidth
                          {...field}
                        />
                      )}
                    />
                  </div>
                  <div className={classes.item}>
                    <label htmlFor="mdname">{t("Middle Names*")}</label>
                    <Controller
                      name="middleName"
                      control={control}
                      render={({ field }) => (
                        <InputText
                          label={"Middle Names"}
                          id={"mdname"}
                          radius
                          {...field}
                          fullWidth
                        />
                      )}
                    />
                  </div>
                  <div className={classes.item}>
                    <label htmlFor="surname">{t("Surname*")}</label>
                    <Controller
                      name="SurName"
                      control={control}
                      render={({ field }) => (
                        <InputText
                          label={"Surname"}
                          id={"surname"}
                          radius
                          fullWidth
                          {...field}
                        />
                      )}
                    />
                  </div>

                  <div className={classes.item}>
                    <label htmlFor="email">{t("E-mail*")}</label>
                    <Controller
                      name="email"
                      control={control}
                      render={({ field }) => (
                        <InputText
                          label={"E-mail Address"}
                          id={"email"}
                          radius
                          fullWidth
                          {...field}
                        />
                      )}
                    />
                  </div>
                  <div className={classes.item}>
                    <label htmlFor="num">{t("Mobile Number*")}</label>
                    <Controller
                      name="number"
                      control={control}
                      render={({ field }) => (
                        <InputMaska id={"num"} {...field} />
                      )}
                    />
                  </div>
                  <p>
                    {t(
                      "Please provide the mobile number in the following format - 971541234567 ( If you live in the UAE)"
                    )}
                  </p>
                  <button>{t("Next")}</button>
                </FormProvider>
              </div>
            </AccordionDetails>
          </Accordion>
        </div>
      </div>

      <div className={classes.cards}>
        <InfoCard
          title={t("83%")}
          text={t("of recent graduates started new jobs")}
          bgImg={foto1.src}
        />
        <InfoCard
          title={t("134")}
          text={t("Degree programs")}
          bgImg={foto2.src}
          primary
        />
        <InfoCard
          title={t("#1")}
          text={t("Most international university")}
          bgImg={foto3.src}
        />
      </div>
    </>
  );
};

export const getStaticProps = async (context) => {
  const locale = context.locale;

  return {
    props: {
      ...(await serverSideTranslations(locale, ["common"])),
    },
  };
};

export default Apply;

import { Button } from "@mui/material";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useTranslation } from "next-i18next";
import Head from "next/head";
import BreadCrumb from "../../components/BreadCrumb/BreadCrumb";
import AppTabs from "../../components/muiCustom/AppTabs/AppTabs";
import ProgramCard from "../../components/ProgramCard";
import SimpleHeading from "../../components/SimpleHeading/SimpleHeading";
import { programPageData } from "../career/facedata/facedataPage";
import classes from "./Programs.module.scss";
import BgTopImg from "../../components/BgTopImg/index";
export default function Programs() {
  const { t } = useTranslation();
  return (
    <>
      <Head>
        <title>{t("AMIYT || Programs")}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BgTopImg />
      <main className={`container , ${classes["program_head"]} `}>
        <BreadCrumb />
        <SimpleHeading hedingText={t("PROGRAMS")} />
      </main>

      <div className={`container , ${classes["program_container"]} `}>
        <AppTabs isProgramPage={true}>
          {programPageData.map((body, i) => (
            <div key={i} className={classes["program"]} label={body?.tabName}>
              <div className={classes["program__head"]}>
                <SimpleHeading hedingText={t(body?.pageTitle1)} />
              </div>
              <div className={classes["program__cards"]}>
                {body?.topCards.map((card, i) => (
                  <ProgramCard key={i} data={card} descBig={true} />
                ))}
              </div>
              <div className={classes["program__desc"]}>
                <div className="program__desc--left">
                  <h3>{body?.middleDesc?.title1}</h3>
                  <p>{body?.middleDesc?.desc1}</p>
                  <br />
                  <br />
                  <h3>{body?.middleDesc?.title1}</h3>
                  <p>{body?.middleDesc?.desc1}</p>
                </div>
                <div className="program__desc--right">
                  <div className="program__desc--right-top">
                    <h3>{body?.middleDesc?.title3}</h3>
                    <p>{body?.middleDesc?.title3}</p>
                  </div>
                  <div className="program__desc--right-body">
                    <AppTabs>
                      {body?.middleDesc?.tabdata.map((tab, i) => (
                        <div key={i} label={tab?.tabName}>
                          <h3>{tab?.tabBody.title}</h3>
                          <p>{tab?.tabBody.description}</p>
                        </div>
                      ))}
                    </AppTabs>
                  </div>
                </div>
              </div>
              <div className={classes["program__cards2"]}>
                <div className={classes["program__cards2--top"]}>
                  <SimpleHeading hedingText={t(body?.pageTitle2)} />
                </div>
                <div className={classes["program__cards2--body"]}>
                  {body?.bottomCards.map((card, i) => (
                    <ProgramCard key={i} data={card} />
                  ))}
                </div>
              </div>
              <div className={classes["program__bottom"]}>
                <div className={classes["program__bottom--top"]}>
                  <SimpleHeading hedingText={t(body?.pageTitle3)} />
                </div>
                <div className={classes["program__bottom--body"]}>
                  <AppTabs>
                    {body.tabBottomData.map((tab, i) => (
                      <div key={i} label={tab?.tabName}>
                        <p>{tab?.tabBody?.description}</p>
                        <br />
                        <p>{tab?.tabBody?.description}</p>
                      </div>
                    ))}
                  </AppTabs>
                </div>
              </div>
              <Button className={classes["program__apply_btn"]}>
                {t("Apply")}
              </Button>
            </div>
          ))}
        </AppTabs>
      </div>
    </>
  );
}

export const getStaticProps = async (context) => {
  const locale = context.locale;

  return {
    props: {
      ...(await serverSideTranslations(locale, ["common"])),
    },
  };
};
